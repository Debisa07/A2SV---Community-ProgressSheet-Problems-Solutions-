{"id":891529175,"lang":"python3","lang_name":"Python3","time":"1 week, 4 days","timestamp":1675537166,"status":10,"status_display":"Accepted","runtime":"1061 ms","url":"/submissions/detail/891529175/","is_pending":"Not Pending","title":"Insertion Sort List","memory":"16.6 MB","code":"class Solution:\n    def insertionSortList(self, head: Optional[ListNode]) -> Optional[ListNode]:\n        sorted = None\n        cur = head\n        while cur:\n            nxt = cur.next\n            sorted = self.sortedInsert(sorted, cur)\n            cur = nxt\n        return sorted\n\n    def sortedInsert(self, head, new):\n        if not head or head.val >= new.val:\n            new.next = head\n            head = new\n        else:\n            cur = head\n            while cur.next and cur.next.val < new.val:\n                cur = cur.next\n            new.next = cur.next\n            cur.next = new\n        return head","compare_result":"1111111111111111111","title_slug":"insertion-sort-list","has_notes":false}